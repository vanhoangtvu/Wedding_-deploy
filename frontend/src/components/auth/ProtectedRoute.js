import React from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';
import { Container, Row, Col, Spinner, Alert } from 'react-bootstrap';

const ProtectedRoute = ({ children, adminOnly = false }) => {
    const { user, loading, isAuthenticated, isAdmin } = useAuth();
    const location = useLocation();

    // Hi·ªÉn th·ªã loading khi ƒëang ki·ªÉm tra auth
    if (loading) {
        return (
            <Container className="mt-5 pt-5">
                <Row className="justify-content-center">
                    <Col xs={12} className="text-center">
                        <Spinner animation="border" variant="primary" />
                        <p className="mt-3">ƒêang ki·ªÉm tra quy·ªÅn truy c·∫≠p...</p>
                    </Col>
                </Row>
            </Container>
        );
    }

    // Ch∆∞a ƒëƒÉng nh·∫≠p -> redirect v·ªÅ login
    if (!isAuthenticated()) {
        return <Navigate to="/login" state={{ from: location }} replace />;
    }

    // C·∫ßn quy·ªÅn admin nh∆∞ng kh√¥ng ph·∫£i admin
    if (adminOnly && !isAdmin()) {
        return (
            <Container className="mt-5 pt-5">
                <Row className="justify-content-center">
                    <Col md={8}>
                        <Alert variant="danger" className="text-center">
                            <Alert.Heading>üö´ Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</Alert.Heading>
                            <p>
                                B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p v√†o trang n√†y. 
                                Ch·ªâ qu·∫£n tr·ªã vi√™n m·ªõi c√≥ th·ªÉ truy c·∫≠p.
                            </p>
                            <hr />
                            <p className="mb-0">
                                N·∫øu b·∫°n l√† qu·∫£n tr·ªã vi√™n, vui l√≤ng li√™n h·ªá v·ªõi nh√† ph√°t tri·ªÉn ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.
                            </p>
                        </Alert>
                    </Col>
                </Row>
            </Container>
        );
    }

    // C√≥ quy·ªÅn truy c·∫≠p -> render children
    return children;
};

export default ProtectedRoute;